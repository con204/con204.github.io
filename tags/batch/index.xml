<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>batch on Amazon EKS Workshop</title>
    <link>/tags/batch/</link>
    <description>Recent content in batch on Amazon EKS Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Nov 2018 00:00:00 -0500</lastBuildDate><atom:link href="/tags/batch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Batch Processing with Argo Workflow</title>
      <link>/advanced/410_batch/</link>
      <pubDate>Sun, 18 Nov 2018 00:00:00 -0500</pubDate>
      
      <guid>/advanced/410_batch/</guid>
      <description>Batch Processing In this Chapter, we will deploy common batch processing scenarios using Kubernetes and Argo.
What is Argo? Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. Argo Workflows is implemented as a Kubernetes CRD (Custom Resource Definition).
 Define workflows where each step in the workflow is a container. Model multi-step workflows as a sequence of tasks or capture the dependencies between tasks using a directed acyclic graph (DAG).</description>
    </item>
    
  </channel>
</rss>
