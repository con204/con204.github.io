<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deploying Jenkins on Amazon EKS Workshop</title>
    <link>/intermediate/210_jenkins/</link>
    <description>Recent content in Deploying Jenkins on Amazon EKS Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Aug 2018 08:30:11 -0700</lastBuildDate><atom:link href="/intermediate/210_jenkins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CodeCommit Repository, Access, and Code</title>
      <link>/intermediate/210_jenkins/codecommit/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/intermediate/210_jenkins/codecommit/</guid>
      <description>We&amp;rsquo;ll start by creating a CodeCommit repository to store our example application. This repository will store our application code and Jenkinsfile.
aws codecommit create-repository --repository-name eksworkshop-app We&amp;rsquo;ll create an IAM user with our HTTPS Git credentials for AWS CodeCommit to clone our repository and to push additional commits. This user needs an IAM Policy for access to CodeCommit.
aws iam create-user \  --user-name git-user aws iam attach-user-policy \  --user-name git-user \  --policy-arn arn:aws:iam::aws:policy/AWSCodeCommitPowerUser aws iam create-service-specific-credential \  --user-name git-user --service-name codecommit.</description>
    </item>
    
    <item>
      <title>Creating the Jenkins Service Account</title>
      <link>/intermediate/210_jenkins/serviceaccount/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/intermediate/210_jenkins/serviceaccount/</guid>
      <description>We&amp;rsquo;ll create a service account for Kubernetes to grant to pods if they need to perform CodeCommit API actions (e.g. GetCommit, ListBranches). This will allow Jenkins to respond to new repositories, branches, and commits.
If you have not completed the IAM Roles for Service Accounts lab, please complete the Create an OIDC identity provider step now. You do not need to complete any other sections of that lab.
 eksctl create iamserviceaccount \  --name jenkins \  --namespace default \  --cluster eksworkshop-eksctl \  --attach-policy-arn arn:aws:iam::aws:policy/AWSCodeCommitPowerUser \  --approve \  --override-existing-serviceaccounts </description>
    </item>
    
    <item>
      <title>Deploy Jenkins</title>
      <link>/intermediate/210_jenkins/deploy/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/intermediate/210_jenkins/deploy/</guid>
      <description>Install Jenkins We&amp;rsquo;ll begin by creating the values.yaml to declare the configuration of our Jenkins installation.
cat &amp;lt;&amp;lt; EOF &amp;gt; values.yaml --- controller: # Used for label app.kubernetes.io/component componentName: &amp;#34;jenkins-controller&amp;#34; image: &amp;#34;jenkins/jenkins&amp;#34; tag: &amp;#34;2.289.2-lts-jdk11&amp;#34; additionalPlugins: - aws-codecommit-jobs:0.3.0 - aws-java-sdk:1.11.995 - junit:1.51 - ace-editor:1.1 - workflow-support:3.8 - pipeline-model-api:1.8.5 - pipeline-model-definition:1.8.5 - pipeline-model-extensions:1.8.5 - workflow-job:2.41 - credentials-binding:1.26 - aws-credentials:1.29 - credentials:2.5 - lockable-resources:2.11 - branch-api:2.6.4 resources: requests: cpu: &amp;#34;1024m&amp;#34; memory: &amp;#34;4Gi&amp;#34; limits: cpu: &amp;#34;4096m&amp;#34; memory: &amp;#34;8Gi&amp;#34; javaOpts: &amp;#34;-Xms4000m -Xmx4000m&amp;#34; servicePort: 80 serviceType: LoadBalancer agent: Enabled: false rbac: create: true serviceAccount: create: false name: &amp;#34;jenkins&amp;#34; EOF Now we&amp;rsquo;ll use the helm cli to create the Jenkins server as we&amp;rsquo;ve declared it in the values.</description>
    </item>
    
    <item>
      <title>Logging In</title>
      <link>/intermediate/210_jenkins/loggingin/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/intermediate/210_jenkins/loggingin/</guid>
      <description>Now that we have the ELB address of your jenkins instance we can go an navigate to that address in another window.
From here we can log in using:
   Username Password     admin command from below    printf $(kubectl get secret --namespace default cicd-jenkins -o jsonpath=&amp;#34;{.data.jenkins-admin-password}&amp;#34; | base64 --decode);echo The output of this command will give you the default password for your admin user.</description>
    </item>
    
    <item>
      <title>Setup multibranch projects</title>
      <link>/intermediate/210_jenkins/multibranch/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/intermediate/210_jenkins/multibranch/</guid>
      <description>After logging into the Jenkins web console, we&amp;rsquo;re ready to add our eksworkshop-app repository. Start by selecting New Item in the menu on the left side.
Set the name of the item to codecommit and select the AWS Code commit item type.
In your Cloud9 workspace, execute the following commands to get your Git username and password.
echo $GIT_USERNAME echo $GIT_PASSWORD Back to Jenkins. In the Projects section, to the right of Code Commit Credentials, select Add then CodeCommit.</description>
    </item>
    
    <item>
      <title>Cleanup</title>
      <link>/intermediate/210_jenkins/cleanup/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/intermediate/210_jenkins/cleanup/</guid>
      <description>To uninstall Jenkins and cleanup the service account and CodeCommit repository run:
helm uninstall cicd aws codecommit delete-repository \  --repository-name eksworkshop-app aws iam detach-user-policy \  --user-name git-user \  --policy-arn arn:aws:iam::aws:policy/AWSCodeCommitPowerUser aws iam delete-service-specific-credential \  --user-name git-user \  --service-specific-credential-id $CREDENTIAL_ID aws iam delete-user \  --user-name git-user eksctl delete iamserviceaccount \  --name jenkins \  --namespace default \  --cluster eksworkshop-eksctl rm -rf ~/environment/eksworkshop-app rm ~/environment/values.</description>
    </item>
    
  </channel>
</rss>
