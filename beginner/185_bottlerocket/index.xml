<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deploy Bottlerocket nodes for additional security on Amazon EKS Workshop</title>
    <link>/beginner/185_bottlerocket/</link>
    <description>Recent content in Deploy Bottlerocket nodes for additional security on Amazon EKS Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 May 2021 00:00:00 -0300</lastBuildDate><atom:link href="/beginner/185_bottlerocket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Prerequisite</title>
      <link>/beginner/185_bottlerocket/prerequisites/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 -0300</pubDate>
      
      <guid>/beginner/185_bottlerocket/prerequisites/</guid>
      <description>Amazon provides official AMIs in the following AWS regions:
   Region Name Region     Africa (Cape Town) af-south-1   Asia Pacific (Hong Kong) ap-east-1   Asia Pacific (Tokyo) ap-northeast-1   Asia Pacific (Seoul) ap-northeast-2   Asia Pacific (Osaka) ap-northeast-3   Asia Pacific (Mumbai) ap-south-1   Asia Pacific (Singapore) ap-southeast-1   Asia Pacific (Sydney) ap-southeast-2   Canada (Central) ca-central-1   Europe (Frankfurt) eu-central-1   Europe (Stockholm) eu-north-1   Europe (Milan) eu-south-1   Europe (Ireland) eu-west-1   Europe (London) eu-west-2   Europe (Paris) eu-west-3   Middle East (Bahrain) me-south-1   South America (SÃ£o Paulo) sa-east-1   US East (N.</description>
    </item>
    
    <item>
      <title>Launch Bottlerocket</title>
      <link>/beginner/185_bottlerocket/launchbottlerocket/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 -0300</pubDate>
      
      <guid>/beginner/185_bottlerocket/launchbottlerocket/</guid>
      <description>Add Bottlerocket nodes to an EKS cluster Create an environment variable for the kubernetes version. We will use this in the next step.
K8S_VERSION=`kubectl version | grep Server | grep -Eo &amp;#39;.&amp;#34;v.{0,4}&amp;#39; | sed -n &amp;#39;s/.*:&amp;#34;v//p&amp;#39;` echo K8S_VERSION: ${K8S_VERSION} Create an eksctl deployment file (eksworkshop_bottlerocket.yaml) use in creating your cluster using the following syntax:
cat &amp;lt;&amp;lt; EOF &amp;gt; eksworkshop_bottlerocket.yaml --- apiVersion: eksctl.io/v1alpha5 kind: ClusterConfig metadata: name: eksworkshop-eksctl region: ${AWS_REGION} version: &amp;#34;${K8S_VERSION}&amp;#34; availabilityZones: [&amp;#34;${AZS[0]}&amp;#34;, &amp;#34;${AZS[1]}&amp;#34;, &amp;#34;${AZS[2]}&amp;#34;] nodeGroups: - name: ng-bottlerocket labels: { role: bottlerocket } instanceType: t2.</description>
    </item>
    
    <item>
      <title>Deploy sample application</title>
      <link>/beginner/185_bottlerocket/deployapp/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 -0300</pubDate>
      
      <guid>/beginner/185_bottlerocket/deployapp/</guid>
      <description>Deploy nginx pod on a Bottlerocket node Create a namespace
kubectl create namespace bottlerocket-nginx Create a simple nginx pod config:
cat &amp;lt;&amp;lt;EoF &amp;gt; ~/environment/bottlerocket-nginx.yaml apiVersion: v1 kind: Pod metadata: name: nginx namespace: bottlerocket-nginx labels: env: test spec: containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent nodeSelector: role: bottlerocket EoF Deploy the application:
kubectl create -f ~/environment/bottlerocket-nginx.yaml Next, run the following command to confirm the new application is running on a bottlerocket node:</description>
    </item>
    
    <item>
      <title>Clean Up</title>
      <link>/beginner/185_bottlerocket/cleaning/</link>
      <pubDate>Wed, 26 May 2021 00:00:00 -0300</pubDate>
      
      <guid>/beginner/185_bottlerocket/cleaning/</guid>
      <description>Cleaning up To delete the resources used in this chapter:
kubectl delete -f ~/environment/bottlerocket-nginx.yaml kubectl delete namespace bottlerocket-nginx eksctl delete nodegroup -f eksworkshop_bottlerocket.yaml --approve </description>
    </item>
    
  </channel>
</rss>
